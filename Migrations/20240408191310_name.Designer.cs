// <auto-generated />
using System;
using Draft_Demo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Draft_Demo.Migrations
{
    [DbContext(typeof(Draft_DemoContext))]
    [Migration("20240408191310_name")]
    partial class name
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Draft_Demo.Models.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("AgentTypeId")
                        .HasColumnName("AgentTypeID")
                        .HasColumnType("int");

                    b.Property<string>("DirectorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Inn")
                        .IsRequired()
                        .HasColumnName("INN")
                        .HasColumnType("varchar(12)")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("Kpp")
                        .IsRequired()
                        .HasColumnName("KPP")
                        .HasColumnType("varchar(9)")
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("AgentTypeId");

                    b.ToTable("Agent");
                });

            modelBuilder.Entity("Draft_Demo.Models.AgentPriorityHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgentId")
                        .HasColumnName("AgentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PriorityValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.ToTable("AgentPriorityHistory");
                });

            modelBuilder.Entity("Draft_Demo.Models.AgentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("AgentType");
                });

            modelBuilder.Entity("Draft_Demo.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("CountInPack")
                        .HasColumnType("int");

                    b.Property<double?>("CountInStock")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("MaterialTypeId")
                        .HasColumnName("MaterialTypeID")
                        .HasColumnType("int");

                    b.Property<double?>("MinCount")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("MaterialTypeId");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("Draft_Demo.Models.MaterialCountHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime");

                    b.Property<double>("CountValue")
                        .HasColumnType("float");

                    b.Property<int>("MaterialId")
                        .HasColumnName("MaterialID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("MaterialCountHistory");
                });

            modelBuilder.Entity("Draft_Demo.Models.MaterialSupplier", b =>
                {
                    b.Property<int>("MaterialId")
                        .HasColumnName("MaterialID")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnName("SupplierID")
                        .HasColumnType("int");

                    b.HasKey("MaterialId", "SupplierId");

                    b.HasIndex("SupplierId");

                    b.ToTable("MaterialSupplier");
                });

            modelBuilder.Entity("Draft_Demo.Models.MaterialType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("DefectedPercent")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MaterialType");
                });

            modelBuilder.Entity("Draft_Demo.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArticleNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("MinCostForAgent")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnName("ProductTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("ProductionPersonCount")
                        .HasColumnType("int");

                    b.Property<int?>("ProductionWorkshopNumber")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Draft_Demo.Models.ProductCostHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("CostValue")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCostHistory");
                });

            modelBuilder.Entity("Draft_Demo.Models.ProductMaterial", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnName("MaterialID")
                        .HasColumnType("int");

                    b.Property<double?>("Count")
                        .HasColumnType("float");

                    b.HasKey("ProductId", "MaterialId");

                    b.HasIndex("MaterialId");

                    b.ToTable("ProductMaterial");
                });

            modelBuilder.Entity("Draft_Demo.Models.ProductSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgentId")
                        .HasColumnName("AgentID")
                        .HasColumnType("int");

                    b.Property<int>("ProductCount")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("int");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductSale");
                });

            modelBuilder.Entity("Draft_Demo.Models.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("DefectedPercent")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ProductType");
                });

            modelBuilder.Entity("Draft_Demo.Models.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("AgentId")
                        .HasColumnName("AgentID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.ToTable("Shop");
                });

            modelBuilder.Entity("Draft_Demo.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Inn")
                        .IsRequired()
                        .HasColumnName("INN")
                        .HasColumnType("varchar(12)")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int?>("QualityRating")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("SupplierType")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("Draft_Demo.Models.Agent", b =>
                {
                    b.HasOne("Draft_Demo.Models.AgentType", "AgentType")
                        .WithMany("Agent")
                        .HasForeignKey("AgentTypeId")
                        .HasConstraintName("FK_Agent_AgentType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Draft_Demo.Models.AgentPriorityHistory", b =>
                {
                    b.HasOne("Draft_Demo.Models.Agent", "Agent")
                        .WithMany("AgentPriorityHistory")
                        .HasForeignKey("AgentId")
                        .HasConstraintName("FK_AgentPriorityHistory_Agent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Draft_Demo.Models.Material", b =>
                {
                    b.HasOne("Draft_Demo.Models.MaterialType", "MaterialType")
                        .WithMany("Material")
                        .HasForeignKey("MaterialTypeId")
                        .HasConstraintName("FK_Material_MaterialType");
                });

            modelBuilder.Entity("Draft_Demo.Models.MaterialCountHistory", b =>
                {
                    b.HasOne("Draft_Demo.Models.Material", "Material")
                        .WithMany("MaterialCountHistory")
                        .HasForeignKey("MaterialId")
                        .HasConstraintName("FK_MaterialCountHistory_Material")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Draft_Demo.Models.MaterialSupplier", b =>
                {
                    b.HasOne("Draft_Demo.Models.Material", "Material")
                        .WithMany("MaterialSupplier")
                        .HasForeignKey("MaterialId")
                        .HasConstraintName("FK_MaterialSupplier_Material")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Draft_Demo.Models.Supplier", "Supplier")
                        .WithMany("MaterialSupplier")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_MaterialSupplier_Supplier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Draft_Demo.Models.Product", b =>
                {
                    b.HasOne("Draft_Demo.Models.ProductType", "ProductType")
                        .WithMany("Product")
                        .HasForeignKey("ProductTypeId")
                        .HasConstraintName("FK_Product_ProductType");
                });

            modelBuilder.Entity("Draft_Demo.Models.ProductCostHistory", b =>
                {
                    b.HasOne("Draft_Demo.Models.Product", "Product")
                        .WithMany("ProductCostHistory")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ProductCostHistory_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Draft_Demo.Models.ProductMaterial", b =>
                {
                    b.HasOne("Draft_Demo.Models.Material", "Material")
                        .WithMany("ProductMaterial")
                        .HasForeignKey("MaterialId")
                        .HasConstraintName("FK_ProductMaterial_Material")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Draft_Demo.Models.Product", "Product")
                        .WithMany("ProductMaterial")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ProductMaterial_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Draft_Demo.Models.ProductSale", b =>
                {
                    b.HasOne("Draft_Demo.Models.Agent", "Agent")
                        .WithMany("ProductSale")
                        .HasForeignKey("AgentId")
                        .HasConstraintName("FK_ProductSale_Agent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Draft_Demo.Models.Product", "Product")
                        .WithMany("ProductSale")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ProductSale_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Draft_Demo.Models.Shop", b =>
                {
                    b.HasOne("Draft_Demo.Models.Agent", "Agent")
                        .WithMany("Shop")
                        .HasForeignKey("AgentId")
                        .HasConstraintName("FK_Shop_Agent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
